
Additions done after first ver:
===============================
WSJT-X support needs WSJT-X 1.5.0-rc1 or higer (must have UDP suport).

-changed text "Remote mode!" to texts "Wsjt remote!" and "Fldigi remote!" to see what remote is running

-fldigi's remote stops wsjt-x remote and also other way round to prevent two remotes at same time.

- wsjtx heartbeat-message changes color of "remote mode!" clred->clFuchsia->clred to indicate UDP is running

-"wsjt-x remote" shows now also last decoded UDP message's type number for more running information.

-reads now all settings from fldigi/preferences (except run path is just '/usr/bin/wsjtx') and follows them. 
 Now it is easy to make new tab for preferences just by copying the fldigi one and change just names.

-fldigis timersetting is not good to copy from preferences. It polls too seldom as we get just one UDP packet 
 per poll. Have to be something like 100-200ms. Now harcoded.

-added wsjt-x CQ-monitor. Uses status- and decode-packets. Status is needed for knowing the band and mode. 
 We get it on start and on every mode or band change. We could request it with packet "replay" but at the    
 moment threre is no need. "Replay" sends first current status packet and then all decoded information that
 has not been cleared with wsjt-x's erase button.
 Status packets update public variables wsjtxBand and wsjtxMode 
 (@ frmNewQSO where the UDP receive is in  tmrWsjtxRemote).
 Band and mode are used on CQ-monitor's header display and also @workedGrids "FollowRig" 
 extension.


-added simplified version of "wkdlog" (@sourceforge). Displays worked grids by band and mode using cqrlogs
 database. All unneeded properties are stripped from this version (jt65-hb9hqx support, adif support and    
 wsjtx support).


- trying to move to GitHub. Lots of questions and difficulties.
  Desperately need "GitHub for Dummies". And in finnish, if I may choose ;) 

- fixed CQ-monitor's CQ-packet decoding (twice as got bug there).

- added check that wsjt-x is not runnung when remote mode is set and run parameter (@ fldigi's preferences) is set.
  (who would add own preferences to wsjt-x remote ?)
  Lock file existence /tmp/WSJT-X.lock is cheked and run command is not issued if file exists

- this leads to situation where wsjt-x is running and remote mode is issued afterwards. Then we do not know wsjtxmode or band
  as they come from 'status' packet that is sent at start, every mode or band change and if 'replay' packet is sent to wsjt-x.
  So if no band or mode change the CQ-Monitor does not know band and mode and dies not show anything.
  This is solved by sending 'replay' packet if we get HeartBeat packet and if WsjtxMode is still ''. We can not do this earlier
  as there is no (return) port for UDP datagram to send  until we have got first HB-packet.    

- In the mean time worked some 6m qsos (CW,SSB) and was not happy for the NewQSO filling order.
  Actually would like to have here some kind of order selector at Preferences-> new qso. How ever did not
  find acceptable way. I do know what it should look like, but did not find a way to code it (yet).
  SO: Now arrow up and down keys work as they did before: the order that fields are on the form.
  I changed forms TabOrder sequence numbers so that Pressing Tab key we go as:
  Call->RSTtx->RSTrx->Grid (at that pont you can press enter to log) or continue as usual order,
  just dropping grid, Name->QTH->PWR->QSL_S->QSL_R etc...

  This is not far from adding autoincrement qso number to RSTsend  :)

- added more decoding for UDP-status message. Now, if transmitting, prefills log's call+mode+freq fields so you are able to see
  country, qrz.com and possible previous qsos before qso is finished and actual logging is done.
  Double ESC key cleans these fields, if needed, as usual.

- some bug hunting without proper results. Sometimes program stops responding, but there is no clear point when and why. Tried clean code a bit.
  Added some cleaning routines to CQ-monitor and newQSO and a checkbox "no history". If checked, incoming CQ line's time is compared to last
  printed line. If they differ whole monitor is cleaned before printing this new line. That keeps only latest CQs visible.

- added new popping form "Reminder". Found from Window-> Reminder. Also pops up after 30mins from start. You can disable it, but I recommed
  to leave it as is :) . You can also write your notes into it like : "Call wife", "pick up kids"  etc...

- changed worked grids print. Now prints somehow confirmed (L,E,Q) grids with green, not confirmed but worked with red.

- changed way to look confirmed grids. Before looked for empty fields, now really seeks L,E,Q from fields. I was afraid that there could be
  spaces that were counted as confirm (<>''). Now also '!' is counted as not confirmed in qsl_r field.

- wsjt-x monitor: Added ALert feature. This is usefull only if you have socond audio card as the first one is used for your wsjt-x!
  Works similar way as the voice keyer faeature.
  You must add new script to ~.config/cqrlog/voice_keyer directory called voice_alert.sh You can copy existing voice_keyer.sh and
  add the audio device selection lines if you do not have them.

- wsjt-x CQ-monitor->Alert->Rethink. Now has 3 different alerts selectable from CQmonitor.
  1) "MyAlert"=someone answered to your CQ plays file named with prefix 'my' from ~.config/cqrlog/voice_keyer directory  
  2) "Text_______Alert"= if the written text is found from printed CQmonitor line plays file named with prefix 'text'
     from ~.config/cqrlog/voice_keyer directory. Text may contain chars from ' '(space) to 'z' but can not hold space(s) at start or end.
     TextAlert should give all bossibilities as before + some more.
  3) "LocAlert"= printed CQmonitor line has new main grid.
  The priority of alerts is same as numbering here. Smaller number overrides previous. 


  voice_alert.sh:
  #!/bin/bash
  # //audio file name (prefix) played on alert
  # //can be:'my'= ansver to my cq,
  # //       'loc'=new main grid,
  # //       'text'=text found from printed line
  # // create files you want to be played
  # scirpt is seeking names with '.wav' suffix! Change if needed    
  #wait if you want several alerts to be played in queue 
  #instead of on top of each other. Even this fails sometimes ;(
  while pgrep alplay ; do
   sleep $(echo '0.'$RANDOM)
  done
  #select audio card(if needed) and play alert message
  aplay ~/.config/cqrlog/voice_keyer/$1.wav

- Wsjt-x CQ-monitor. Disabled false used "RR73" being a locator. "RR73 should not be used as saying RRR + 73 at same time, but some stations
  how ever are using it.

- Worked grids map: Follow rig: rewritten band/mode selection. Should now fall to 'all' or 'any' if mode or band is not in selection list.

- Added alternative Propagation2 form. (newQso->Window->Propagation2). Shows image from http://hamqsl.com/solar - selection. Selection is done
  in Preferences-> external viewers. Actually it can show a gif image from any url... It has small bug see "issues to resolve"

- Added adjustable refresh time for Propagation2 (15-999min) with mask edit. Fixed also Reminder's time setting mask edit.

- Renamed propagation2 to ImgView. You can now show also something else than hamqsl's propagation image. Supports now jpg,png,gif.
  Maybe you like to see image from your door webcam instead?
  Be aware that autosize seems to fail sometimes. I do not know (yet) where the problem is: My code, Lazarus or X server.
  If you have tested version with Propagation2 you might like to remove some variables from config.
  To do this, you need to remove them from mysql DB named "log youhave used" table "cqrlog_config".
  Dump config from database:
	mysqldump -p --user=cqrlog cqrlog001 cqrlog_config >/tmp/cnf.sql

	Open /tmp/cnf.sql with your favorite text editor (nano, mc, joe ..)
	Note that all data is in one line !
	Search and remove this part:

	\nPUrl=http://url.you.have.typed.is.here\nPUrlts=061\nPUrltime=61

	Then return config to database:
	mysql -u cqrlog -p -D cqrlog001 < /tmp/cnf.sql

- ImgView: small change trying to keep form window image sized.

- Changed cDB_PING_INT from 300 to 300000 as suggested by Jussi AA6KJ in thread http://www.cqrlog.com/node/1489 to see if it has effect.

- Added Product/File numbers to splash and about. Mainly for myself to keep track what version is under test. Auto increment for version
  numbering must be selected from Project properties and only build (Shift+F9) automatcly increases file number.

- Removed product number from splash & about. We do not need that for anything.

 Issues resolved:
===================

- when in remotemodewsjtx: open qso list, edit qso, causes focus error (does fldigi the same? must test)
  Oh, found !
  "Log is in remote mode please disble it!" in fldigi remote. Two changes needed:
  TfrmMain.acEditQSOExecute @ main.pas
  line 650: if (frmNewQSO.mnuRemoteMode.Checked) or (frmNewQSO.mnuRemoteModeWsjtx.Checked) then
  TfrmMain.acViewExecute @ main.pas
  line 742  if (frmNewQSO.mnuRemoteMode.Checked) or (frmNewQSO.mnuRemoteModeWsjtx.Checked) then
FIXED

- for some unknown reason wsjtx-remote works if started from console in debug mode "cqrlog debug=1"
  if started from icon (no debug) wsjtx-remote does not work !!!!
  Strange and hard to find. Noticed from no color change in text "Wsjtx remote!" when hearbeat is send
  from wsjtx (seen with tcpdump).
  STUPID ME ! 
  I had built decode partially so that it worked only under "if dmData.DebugLevel>=1 then" sentences.
  So it can't work without debug=1 !
FIXED

- in wsjtx logging misstyped power as "15" to "Name" field of wsjtx that causes name to be 15 and error
  in cqrlog logging. On the other hand if cqrlog in manual mode you can type name as 15 and there
  will be no error. Error is:" "15" is not a valid component name."
  Empty or string (A..Z, a..z) does not cause error.
  We'll fix this by sorting name at wsjtx message 5 decode section so that it contains only A..Z,a..z.
  TYPO!
  Used variable "name" for name. Var "name" seems to be introduced somewhere as global because complier
  does not complain.
FIXED
 
 -Worked_grids works now only for OH1KH.
  Still need to understand how database is selected in cqrlog !!!!
  I have separate database running at localhost (cqrlog accesses with IP and port) because that works faster
  than cqrlog's internal version of database (no hickups at start with this!!!).
  That's why I can access log database easily from my code (and I have only 1 database).
  Database information: What is the selected database? (now was hard coded to my settings).
  is there difference if DB is internal (cqrlog) or external (IP+port). Have to dig out from original code.
  ---
  Found some kind of solution. May work also for others than me. If I have understand program's startup
  right. Not tested with different variations and not with program internal mysql at all.
NOT FIXED WITH THIS(but needs testing)
  I thik I understood now how database is selected. It did not work with local database. Now does.
FIXED

-  I would like have the CQ-monitor display to be more colorfull !
  Means: 
     Call that is not worked  would be green, otherwise red.
     If locator (4chrs. I call it subgrid), is not worked green, otherwise red.
     If main grid , first (2chr) is worked: them red, rest of loc (the numbers) green.
  Managed to get DXCCInfo to the end of line although it took some time to find functions to get
  prefix from call and then 'adif' (means what in here?)from prefix and finally dxccinfo. 
     Text could also have different colours depending the DXCCInfo message content.
  So all this means several colors at same line.
  Tried to install TRichMemo and the install went ok to my Lazarus,
  but it did not work. Compile/runtime problems. Source was quite old (2009 !!).
  Maybe there is better solution now (@2015)? I have to google more about this.
  ---
  Managed with  https://svn.code.sf.net/p/lazarus-ccr/svn/components/richmemo/ (Revision 4151).
  CQ-Monitor has now colors telling status. Additional texts removed.
  Changed font to non proportional for better justify.
  Received message #3 (clear) from wsjt-x clears now Cq-Monitor, too (fNewQSO/decode msgs)
FIXED

- If Worked Grids map is open and "follow rig" is checked then starting remote wsjt-x causes crash because wkdGrid-autoupdate
  timer runs before wsjt-x has sent "status" packet frmNewQSO.WsjtxMode is sill empty.
  Must check under FollowRig.checked that wsjtxRemote.checked needs also frmNewQSO.WsjtxMode<>'' 
FIXED

- takes name from qrz.com but puts it only to newQSO form, not in log. (Name comes too late!) 
  YEP! same issue with fldigi-remote. Name appears to form, ({too} late) but not in log.
  This is not big deal. Maybe I'll look it sometimes. 
  I think I have solution for this. There is QRZ.Thread at editCallExit. Added QRZ.WaitFor; after QRZ.Start. Now we wait QRZ to finish.
  This may make problem if qrz-fetch fails somehow and has no timeout timer. Is it needed ????
  After that added to both fldigiTimer and wsjtxtimer a condition where if sname is empty (user did not give name on remote side)
  value of edtName.Text stays as is (from qrz, may it be). If sname has content it is palced to edtName.Text and runs over qrz value.
FIXED

- if form is open at close -> reopen when started again (something more to ini?).
  Worked_grids does not open automaticly.
  Worked_grids and wsxt-x CQ-monitor do not remember last runtime's position on screen.
  When searching something else found how this was done with other forms. Simply copied needed parts to worked_grids and monwsjtx.
FIXED


- there is something wrong at frmworked_grids when database is changed from local to remote and vice versa. How ever cqrlog issues in log selection
  and rigctld makes it too hard to debug!!!!!!!!!!
- I think I have many duplicate parts of code as it seems that cqrlog has many functions (specially DB access) that could be used
  for wsjt-x CQ-monitor and worked_grids form. I just can not follow all the ideas original code has.
  I group these two.
  Now I did what should be done long ago. I used dData's sql routines for worked_grids map and wsjt-x CQ-monitor. It was not even hard
  and simplified my code a lot. And at the same time I got rid of getting the right database after log change. If logging works map and monitor works.
  Got some reports that these two, when using my own sql routines did not work with latest Fedora distibutions (I'm stuck with F20 ;)
FIXED !!

FIXED dUtils.pas isLOcOK.  Locator can have letters  A..R, not  A..X (From AA00AA to RR99RR)

ADDED CQ-monitor prints also lines with "mycall" if they are answers to my cq I.E. last element is locator of answering station. This
  needs change in monitor code, but also change in newQSO where UDP packets are decoded.

  sometimes stops showing CQ messages on wsjt-x CQ-monitor. Reason is that when decoding message functoion NextElement(FMoniWsjtx.pas) fails to
  remove heading space before mode letter (# or @) resulting mode as ' ' that causes line not to print.
  Moved NextElement to public functions where it now has own internal loop variable (i) and string Message is handled as calling var.
FIXED (I hope, but his may take long time to be confirmed) 

 Cqmonitor did not properly decode line "CQ DX CALLSIGN" placing CALLSIGN also to locator (that should have noticed by IsLocOK!!).
 NextElement did not properly cut message line when extracting the last item of line.
FIXED

-Still problems with CQ-Monitor. If DX-Cluster is connected it's traffic overrides CQ-Monitor's line decode if DX info is coming in the middle of
 line decoding.This is seen if debug=1.(Why?) After that kind of situation something odd happens and NextElement's trim(Message) does not work any more leaving one
 single space before mode letter and it leads to empty mode-> line is not deoded/printed.
 This is very very very ODD ! I'm trying to get workaround for this, but how???
Rewritten NextElement, and also UDP decoding tmrwsjtx@NewQso so that message string is no more touched. Instead there is a index pointer that
 shows where we are going in decode. This should be faster as string is not cutted any more and should also leave problems like trim() does not work,
 behind.
FIXED (hopely now!)

- answering to CQ by double clicking CQ-Monitors line.
  Double click on wsjt-x CQ-monitor line sends corresponding UDP-reply message that initiates QSO.
FIXED 

- found a reproductable bug: Open Qso list -> pres Edit QSO. Halts program. THis leads also some other halts on various situations, I think.
  It has been there on some commits now.
  Reason is my clever fix for dUtls-> islocok cheking locator lettes to be valis A trough X. As locators can be onlu AA to RR I changed this
  at one commit to be A trough R. That causes problem somewhere in grayline calculation that halts program.
FIXED by returning range to A .. X


- Problem reported on main/sub gid count. Gives more main grids that are on map. Caused by mistyped locator that had only one letter (I.E. length=1).
  Tried first to resolve id by modifying dmUtils.ISlocOK but as it caused errors before decide to write own check frmWorked_grids.GridOK.
  It can handle up to 8 chr long locators and checks validy of letters and numbers and also that length is pair.
FIXED

- if worked girds map has "Follow rig" checked and we turn off from ham freq happens crash. frmTRXControl.GetModeBand(mode,band) gives True result, but empty band.
  What means true? We got something from rig or... as fixing these from original code has shown out to be dangerous worked grids map now checks first
  that it is getting True resut and then that band is not empty string. 
FIXED


 -When selected "Clear DX call and gird afetr logging" wsjt-x sends empty string (as "call") in UDP status (1) packet and cqrlog does crash at that point.
 Empty stiring has length as  $FFFF FFFF and it has no other content. This exeption is now taken account when decoding UDP-packets.
FIXED

 - If worked_grids form is open while exporting qsos to LoTW export ends with error "Q1:Field not found: 'id_cqrlog_main'.
   This happens because worked_grid's autoupdate timer polls while LoTW upload an uses same Q1 query.
   Removed qso amount polling (that used Q1) from autoupdate timer. Autoupdate timer now polls only rig (if "follow rig" checked and boolean
   "changes" (that was previously indicating rig changes only). Now "changes" is public variable and is set true as last thing when
   pressing "save button" on NEwQSO form and pressing "Delete qso" on main from. These should keep worked_grids up to date and avoid it
   using Q1 with timer. This might help also to other similar situations (mysterious erros) that happened because Q1 suddenly is taken in use by
   autoupdate timer.
FIXED
   Small change. "Delete" and "save qso" buttons now directly updates worked_grids map. Not any more just turns "change" flag and let autoupdate routine
   do the job. This minimizes more Q and Q1 queries usage "at wrong time".

 - if  mode and frequency is selected from (cqrlog or fixed) from preferences caused UDP decoding error as value from UDP was not read and index pointer
   did not move to next element.
FIXED

 - When worked grids map is open and "follow rig" is selected and wsjt-x remote is selected change bands from wsjt-x to 600m or 2km causes invalid
   floating point error chrash.
   Added 2km and 600m bands to worked grids map band selector.
   FIXED

 - Adjust of time in Reminder did not work. Wonder how it was working during tests?!?. Changed EditMaskof Reminder, allows now time setting ok. 
   FIXED

- Propagation2 form has a bug that causes crash if gif is not found from given url. Fixed some thread handling and now error reporting from
  false url and galse content (not gif) works.
  FIXED

- I'm afraid that Propagation2 form has sill a bug in Memory stream handling that may eat memory during longer use. We'll see...
  Dropped one memory strem off and fixed error handling /and debugging) a bit.
  HOPE IT IS FIXED NOW

- Propagation2: small bug in remembering was window open or not on last session
  FIXED

- Unproperly formatted CQ (ex: CQ USA CA1LL should be: CQ CA1LL USA) crashed Wsjtx-CQ-monitor.
  FIXED

 Issues to resolve:
===================

- wsjt-x need preferences tab just like fldigi has.

- fldigi remote has issue: It does not check if fldigi is already running and so starting another thread of fldigi. NO GOOD.

- cqrlog has issue in log selection: When remote database is used and open or change log is selected and there "save log data to local.." is checked
  and local database engine start is accepted, form does not load local logs but shows still remote log(s? I do have just one) in selection.
  This is fixed by stopping cqrlog and starting it again. 

- cqrlog has issue in rigctld usage: tried long time to trap error where worked_grids map did not follow rig, altough it was checked, at situation
  where local log was changed to another. At log change cqrlog losts its connect to rigctld. And when I found that I remembered that it has been
  issue for long time (before 1.9.0). And confirmed also by other users.
TRIED to resolve this, but no luck.
  Problem, one of them, is on URigControl.pas. It does not check if rigctld is already running when cqrlog starts. Sometimes this leads
  to Defunc-state of second rigctld (seen with ps ax | grep rig).
  Tried to make a code that checks this with pidof/Tprocess. First results were promising, but then the same problem continued. This may
  be easier to do with bash script  that first checks pid and if not found starts rigctld. Bash is so much easier !!!
  Maybe I try via that way next.
  But there may be something else, too.





