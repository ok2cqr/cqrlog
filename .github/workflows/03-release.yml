name: Draft Release

on:
  push:
    branches:
      - master
    tags:
      - 'v*'

jobs:
  build_release:
    name: build_release
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: version
        run: echo "tag_ver=$(./tools/get_version.sh)" >> $GITHUB_ENV

      - name: compilation
        run: echo "tag_comp=$(./tools/get_version.sh 1)" >> $GITHUB_ENV

      - name: Run Build Appimage GTK2
        run: make appimage

      - name: Run Build Appimage QT5
        run: make appimage-qt5

      - name: Run Build test deb
        run: make deb

      - name: Build debug
        run: ls -lh

      - name: release-draft
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: true
          prerelease: false
          release_name: CQRLOG v${{ env.tag_ver }}
          tag_name: ${{ github.ref }}
          body_path: CHANGELOG
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload deb artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: cqrlog_${{ env.tag_ver }}-1_amd64.deb
          asset_name: cqrlog_${{ env.tag_ver }}-1_amd64.deb
          asset_content_type: application/vnd.debian.binary-package

      - name: Upload AppImage GTK2
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: CQRLOG-${{ env.tag_ver }}_(${{ env_tag_comp }})-GTK2-x86_64.AppImage
          asset_name: CQRLOG-${{ env.tag_ver }}_(${{ env_tag_comp }})-GTK2-x86_64.AppImage
          asset_content_type: application/vnd.appimage
      
      - name: Upload AppImage QT5
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: CQRLOG-${{ env.tag_ver }}_(${{ env_tag_comp }})-QT5-x86_64.AppImage
          asset_name: CQRLOG-${{ env.tag_ver }}_(${{ env_tag_comp }})-QT5-x86_64.AppImage
          asset_content_type: application/vnd.appimage
